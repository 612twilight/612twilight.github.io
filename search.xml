<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>jieba之分词</title>
      <link href="/2018/11/09/%E5%88%86%E8%AF%8D/"/>
      <url>/2018/11/09/%E5%88%86%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要="">摘要：这是一篇介绍如何使用jieba去分词的博客<a id="more"></a></excerpt></p><the rest="" of="" contents="" |="" 余下全文=""><h1 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import jieba</span><br></pre></td></tr></table></figure><h1 id="建立短句"><a href="#建立短句" class="headerlink" title="建立短句"></a>建立短句</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s = u&apos;我想和女朋友一起去北京故宫博物院参观和闲逛。&apos;</span><br></pre></td></tr></table></figure><p>这里的u是告诉python是使用Unicode编码解读里面的数据，一般在文件开头加上# -<em>- coding: UTF-8 -</em>-也可以做到</p><h1 id="精确模式"><a href="#精确模式" class="headerlink" title="精确模式"></a>精确模式</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cut = jieba.cut(s)</span><br><span class="line">print(&quot;【精确模式下输出】&quot;)</span><br><span class="line">print(cut) </span><br><span class="line"># &lt;generator object Tokenizer.cut at 0x0000023490DA3888&gt;</span><br><span class="line"># 这里输出的是一个generator</span><br><span class="line">print(&apos;,&apos;.join(cut))  </span><br><span class="line"># &apos;,&apos;.join(cut)表示使用&quot;,&quot;将cut里面的序列连接起来</span><br><span class="line"># 我,想,和,女朋友,一起,去,北京故宫博物院,参观,和,闲逛,。</span><br></pre></td></tr></table></figure><h1 id="全局模式"><a href="#全局模式" class="headerlink" title="全局模式"></a>全局模式</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cutall=jieba.cut(s,cut_all = True)</span><br><span class="line">print(&quot;【全局模式下输出】&quot;)</span><br><span class="line">print(&apos;,&apos;.join(cutall))</span><br><span class="line"># 我,想,和,女朋友,朋友,一起,去,北京,北京故宫,北京故宫博物院,故宫,故宫博物院,博物,博物院,参观,和,闲逛,,</span><br></pre></td></tr></table></figure><p>全局模式下会尽可能多的对字符串进行切分</p><h1 id="搜索引擎模式"><a href="#搜索引擎模式" class="headerlink" title="搜索引擎模式"></a>搜索引擎模式</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cutsearch = jieba.cut_for_search(s)</span><br><span class="line">print(&apos;【搜索引擎模式下输出】&apos;)</span><br><span class="line">print(&apos;,&apos;.join(cutsearch))</span><br><span class="line"># 我,想,和,朋友,女朋友,一起,去,北京,故宫,博物,博物院,北京故宫博物院,参观,和,闲逛,。</span><br></pre></td></tr></table></figure><p>在精确模式的基础上，对长词在此划分</p><h1 id="使用lcut获取list"><a href="#使用lcut获取list" class="headerlink" title="使用lcut获取list"></a>使用lcut获取list</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cut_s = jieba.lcut(s)</span><br><span class="line">print(type(cut_s)) </span><br><span class="line"># &lt;class &apos;list&apos;&gt; 这里返回的是list</span><br><span class="line">print(cut_s)</span><br><span class="line"># [&apos;我&apos;, &apos;想&apos;, &apos;和&apos;, &apos;女朋友&apos;, &apos;一起&apos;, &apos;去&apos;, &apos;北京故宫博物院&apos;, &apos;参观&apos;, &apos;和&apos;, &apos;闲逛&apos;, &apos;。&apos;]</span><br><span class="line"></span><br><span class="line">lcut_for_search = jieba.lcut_for_search(s) # 这里也是lcut</span><br><span class="line">print(lcut_for_search)  # 返回list</span><br><span class="line"># [&apos;我&apos;, &apos;想&apos;, &apos;和&apos;, &apos;朋友&apos;, &apos;女朋友&apos;, &apos;一起&apos;, &apos;去&apos;, &apos;北京&apos;, &apos;故宫&apos;, &apos;博物&apos;, &apos;博物院&apos;, &apos;北京故宫博物院&apos;, &apos;参观&apos;, &apos;和&apos;, &apos;闲逛&apos;, &apos;。&apos;]</span><br></pre></td></tr></table></figure><h1 id="综合上述代码"><a href="#综合上述代码" class="headerlink" title="综合上述代码"></a>综合上述代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line">import numpy as np</span><br><span class="line"># import tensorflow as tf</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">Created by gaoyw on 2018/11/9</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">import jieba</span><br><span class="line">s = &apos;我想和女朋友一起去北京故宫博物院参观和闲逛。&apos;</span><br><span class="line">cut = jieba.cut(s)</span><br><span class="line"></span><br><span class="line">print(&apos;【精确模式下输出】&apos;)</span><br><span class="line">print(cut)</span><br><span class="line">print(&apos;,&apos;.join(cut))</span><br><span class="line"></span><br><span class="line">cutall=jieba.cut(s,cut_all = True)</span><br><span class="line">print(&quot;【全局模式下输出】&quot;)</span><br><span class="line">print(&apos;,&apos;.join(cutall))</span><br><span class="line"></span><br><span class="line">cutsearch = jieba.cut_for_search(s)</span><br><span class="line">print(&apos;【搜索引擎模式下输出】&apos;)</span><br><span class="line">print(&apos;,&apos;.join(cutsearch))</span><br><span class="line"></span><br><span class="line">cut_s = jieba.lcut(s)</span><br><span class="line">print(type(cut_s))</span><br><span class="line">print(cut_s)</span><br><span class="line"></span><br><span class="line">lcut_for_search = jieba.lcut_for_search(s)</span><br><span class="line">print(lcut_for_search)</span><br></pre></td></tr></table></figure></the>]]></content>
      
      
      <categories>
          
          <category> NLP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分词 </tag>
            
            <tag> jieba </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>genism之tfidf</title>
      <link href="/2018/11/09/tfidf/"/>
      <url>/2018/11/09/tfidf/</url>
      
        <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要="">摘要：这是一篇介绍如何使用genism去计算一个词在文档语料库的tfidf值的博客<a id="more"></a></excerpt></p><the rest="" of="" contents="" |="" 余下全文=""><h1 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from gensim import models, similarities</span><br></pre></td></tr></table></figure><h1 id="定义语料库"><a href="#定义语料库" class="headerlink" title="定义语料库"></a>定义语料库</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">corpus = [[(0, 1.0), (1, 1.0), (2, 1.0)],</span><br><span class="line">            [(2, 1.0), (3, 1.0), (4, 1.0), (5, 1.0), (6, 1.0), (8, 1.0)],</span><br><span class="line">            [(1, 1.0), (3, 1.0), (4, 1.0), (7, 1.0)],</span><br><span class="line">            [(0, 1.0), (4, 2.0), (7, 1.0)],</span><br><span class="line">            [(3, 1.0), (5, 1.0), (6, 1.0)],</span><br><span class="line">            [(9, 1.0)],</span><br><span class="line">            [(9, 1.0), (10, 1.0)],</span><br><span class="line">            [(9, 1.0), (10, 1.0), (11, 1.0)],</span><br><span class="line">            [(8, 1.0), (10, 1.0), (11, 1.0)]]</span><br></pre></td></tr></table></figure><p>corpus就是我们的文档库，其中article0=corpus[0]=[(0, 1.0), (1, 1.0), (2, 1.0)]表示的是一篇文档的组成,article0[0]=（0,1.0）表示的是单词编号为0的词在该文章里有出现过1.0次，其余组成也是这样：单词编号为1的词在该文章里出现1.0次，单词编号为2的词在该文章里出现了1.0次。</p><h1 id="建立tfidf的模型"><a href="#建立tfidf的模型" class="headerlink" title="建立tfidf的模型"></a>建立tfidf的模型</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tfidf = models.TfidfModel(corpus)</span><br></pre></td></tr></table></figure><h1 id="建立需要提取的文档"><a href="#建立需要提取的文档" class="headerlink" title="建立需要提取的文档"></a>建立需要提取的文档</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_article = [(0, 1), (4, 1)]</span><br></pre></td></tr></table></figure><p>显然文档也是由向量组成的。</p><h1 id="计算新文档的tfidf的值"><a href="#计算新文档的tfidf的值" class="headerlink" title="计算新文档的tfidf的值"></a>计算新文档的tfidf的值</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result=tfidf[new_article]</span><br></pre></td></tr></table></figure><p>result就是这篇文章中所有词的tfidf值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(result)</span><br></pre></td></tr></table></figure><p>打印结果是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[(0, 0.8075244024440723), (4, 0.5898341626740045)]</span><br></pre></td></tr></table></figure><p>结果表示的是编号为0的词的tfidf的值为0.8075244024440723，而编号为4的词的tfidf的值为0.5898341626740045</p><h1 id="综合上述代码"><a href="#综合上述代码" class="headerlink" title="综合上述代码"></a>综合上述代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">from gensim import models, similarities</span><br><span class="line">corpus = [[(0, 1.0), (1, 1.0), (2, 1.0)],</span><br><span class="line">            [(2, 1.0), (3, 1.0), (4, 1.0), (5, 1.0), (6, 1.0), (8, 1.0)],</span><br><span class="line">            [(1, 1.0), (3, 1.0), (4, 1.0), (7, 1.0)],</span><br><span class="line">            [(0, 1.0), (4, 2.0), (7, 1.0)],</span><br><span class="line">            [(3, 1.0), (5, 1.0), (6, 1.0)],</span><br><span class="line">            [(9, 1.0)],</span><br><span class="line">            [(9, 1.0), (10, 1.0)],</span><br><span class="line">            [(9, 1.0), (10, 1.0), (11, 1.0)],</span><br><span class="line">            [(8, 1.0), (10, 1.0), (11, 1.0)]]</span><br><span class="line">print(np.shape(corpus))</span><br><span class="line">tfidf = models.TfidfModel(corpus)</span><br><span class="line">new_article = [(0, 1), (4, 1)]</span><br><span class="line">result = tfidf[new_article]</span><br><span class="line">print(result) </span><br><span class="line"># [(0, 0.8075244024440723), (4, 0.5898341626740045)]</span><br></pre></td></tr></table></figure></the>]]></content>
      
      
      <categories>
          
          <category> NLP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gensim </tag>
            
            <tag> tfidf </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>word2vec工具探索</title>
      <link href="/2018/11/09/word2vec/"/>
      <url>/2018/11/09/word2vec/</url>
      
        <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要="">摘要：这是一篇介绍如何使用genism去计算一个词的word embedding<a id="more"></a></excerpt></p><the rest="" of="" contents="" |="" 余下全文=""></the>]]></content>
      
      
      <categories>
          
          <category> NLP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gensim </tag>
            
            <tag> word2vec </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>如何建立这个站点</title>
      <link href="/2018/11/07/%E5%BB%BA%E7%AB%8B%E8%BF%99%E4%B8%AA%E7%AB%99%E7%82%B9/"/>
      <url>/2018/11/07/%E5%BB%BA%E7%AB%8B%E8%BF%99%E4%B8%AA%E7%AB%99%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<p><excerpt in="" index="" |="" 首页摘要="">摘要：这里简单记录一下这个站点建立的过程<a id="more"></a></excerpt></p><the rest="" of="" contents="" |="" 余下全文=""><h1 id="建立github-page"><a href="#建立github-page" class="headerlink" title="建立github page"></a>建立github page</h1><h2 id="申请一个github账号"><a href="#申请一个github账号" class="headerlink" title="申请一个github账号"></a>申请一个github账号</h2><p>进入 <a href="https://github.com/join?source=header-home" target="_blank" rel="noopener">github申请界面</a></p><p><img src="/2018/11/07/建立这个站点/github申请.png" alt="github申请"></p><h2 id="新建一个仓库"><a href="#新建一个仓库" class="headerlink" title="新建一个仓库"></a>新建一个仓库</h2><p><img src="/2018/11/07/建立这个站点/git建仓库.png" alt="git建仓库"></p><p><strong>注意：仓库名需要与你的github用户名一致</strong></p><p>这时，github page就自动生成了。地址是：https://{仓库名}.github.io</p><h1 id="使用hexo建立站点"><a href="#使用hexo建立站点" class="headerlink" title="使用hexo建立站点"></a>使用hexo建立站点</h1><p>需要环境：npm等</p><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h2 id="创建本地文件夹，用来放博客文件"><a href="#创建本地文件夹，用来放博客文件" class="headerlink" title="创建本地文件夹，用来放博客文件"></a>创建本地文件夹，用来放博客文件</h2><h2 id="进入该文件夹的powershell界面"><a href="#进入该文件夹的powershell界面" class="headerlink" title="进入该文件夹的powershell界面"></a>进入该文件夹的powershell界面</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>会生成一批文件</p><p><img src="/2018/11/07/建立这个站点/hexo生成的文件" alt="hexo生成的文件.png"> </p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>_config.yml文件是配置文件，主要的配置项可以参考<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">hexo官方文档</a></p><p>一定要配置的有</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/&#123;仓库名&#125;/&#123;仓库名&#125;.github.io.git</span><br><span class="line">branch: gh-pages</span><br></pre></td></tr></table></figure><h2 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line"></span><br><span class="line">hexo generate</span><br><span class="line"></span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>此时可以打开页面：https://{仓库名}.github.io 查看博客详情</p><h1 id="使用主题"><a href="#使用主题" class="headerlink" title="使用主题"></a>使用主题</h1><h2 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h2><p>本博客使用的是yelee主题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/MOxFIVE/hexo-theme-yelee.git themes/yelee</span><br></pre></td></tr></table></figure><p>下载完成后，会在项目themes目录下生成yelle文件夹 </p><p>修改项目根目录配置文件_config.yml，即可切换至Yelle主题 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: Yelee</span><br></pre></td></tr></table></figure><p><img src="/2018/11/07/建立这个站点/修改主题.png" alt="img"> </p><h2 id="主题预览"><a href="#主题预览" class="headerlink" title="主题预览"></a>主题预览</h2><p>执行以下命令预览主题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p>yelee主题的诸多配置可以参考该说明 <a href="http://moxfive.coding.me/yelee/1.Getting-Started/" target="_blank" rel="noopener">yelee主题使用说明</a></p></the>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
